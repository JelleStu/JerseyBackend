plugins {
    id 'application'
    id "org.sonarqube" version "2.7"
    id 'java'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}
sourceCompatibility = 1.11

repositories {
    mavenCentral()
}

application {
    mainClassName = 'ticketsystem.service.Publisher'
}

shadowJar{
    mergeServiceFiles()
    manifest{
        attributes 'Main-Class': 'ticketsystem.service.Publisher'
    }
}
dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.22.Final'
    compile group: 'com.h2database', name: 'h2', version: '1.4.200'

    /*  Jersey for the service
        We use the latest 2.x release because 2.x releases implement JAX-RS 2.1 API.
        We do NOT use a Jersey 3.x release because 3.x releases implement Jakarta RESTful WebServices 3.0 API.*/
    implementation group: 'org.glassfish.jersey.bundles', name: 'jaxrs-ri', version: '2.+'
    implementation group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet', version: '2.+'


    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.+'
    // https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
    implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.+'



    // Grizzly will host the service
    implementation group: 'org.glassfish.jersey.containers', name: 'jersey-container-grizzly2-http', version: '2.+'


    // Logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.+'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.+'

    //sockets
    compile 'org.glassfish.grizzly:grizzly-websockets:3.0.0-M1'
    compile 'org.glassfish.grizzly:grizzly-http-servlet-server:3.0.0-M1'

}

test {
    useJUnit()

    maxHeapSize = '1G'
}
